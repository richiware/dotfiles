#!/bin/bash

# Get directory of this script
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
# Load log
source $script_dir/log4bash.sh

########################################################################################################################
# BEFORE BOOTSTRAP
#
# * Install 'yadm'
# * Install 'sudo' and configure for the user.
########################################################################################################################

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd "$HOME"

log_info "Init submodules..."
yadm submodule update --recursive --init

if [ -e /etc/gentoo-release ]; then
    log_info "Cloning my portage repository..."
    cd /usr/local
    if [ ! -d portage ]; then
        sudo mkdir portage
        sudo chown $USER:$USER portage
        git clone https://github.com/richiware/richioverlay.git portage
        cd portage
        git pull --ff-only
        cd ~
        sudo cp ~/.config/yadm/system/richioverlay.conf /etc/portage/repos.conf/
    else
        log_warning "Portage repository is already installed"
    fi

    if [ ! -d /etc/portage/package.accept_keywords ]; then
        log_info "Adding my package.accept_keywords..."
        sudo mkdir /etc/portage/package.accept_keywords
        sudo ln -s /home/ricardo/.config/yadm/system/portage/yadm.accept_keywords /etc/portage/package.accept_keywords/yadm.accept_keywords
    fi

    if [ ! -d /etc/portage/package.use ]; then
        log_info "Adding my package.use..."
        sudo mkdir /etc/portage/package.use
        sudo ln -s ~/.config/yadm/system/portage/android.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/ca-certificates.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/cawbird.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/draobpilc.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/gnucash.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/latex.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/networkmanager.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/picard.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/qemu.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/remmina.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/screencast.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/telegram-desktop.use /etc/portage/package.use/
        sudo ln -s ~/.config/yadm/system/portage/vim.use /etc/portage/package.use/
    fi
fi

log_info "Installing packages..."
if [ -e /etc/gentoo-release ]; then
    sudo emerge -vau --oneshot \
        `: # Used by openweather gnome shell extension.` \
        zip \
        && log_info "Packages installed successful" || (log_error "Failed packages installation" ; exit -1)

    sudo emerge -vau \
        `: # A cat clone with syntax highlighting, Git integration, so on.` \
        bat \
        `: # A host application for browserpass browser extension providing it access to your password store.` \
        browserpass \
        `: # fast compiler cache.` \
        ccache \
        `: # C/C++/ObjC language server supporting cross references, hierarchies, ... Used by CoC Vim plugin.` \
        ccls \
        `: # Exuberant Ctags creates tags files for code browsing in editors.` \
        ctags \
        `: # DejaVu fonts, bitstream vera with ISO-8859-2 characters. For interface fonts.` \
        dejavu \
        `: # GUI for GPaste clipboard manager for Gnome Shell.` \
        draobpilc \
        `: # eselect plugin for adding repositories into your portage.` \
        eselect-repository \
        `: # A simple, fast and user-friendly alternative to find.` \
        fd \
        `: # Fuzzy-finder.` \
        fzf \
        `: # Wrapper around PyFlakes, pep8 and mccabe. Needed by coc-python Vim plugin.` \
        flake8 \
        `: # Adds KStatusNotifierItem support to the Shell.` \
        gnome-shell-extension-appindicator \
        `: # Integrate github's notifications within the gnome desktop environment.` \
        gnome-shell-extension-github-notifications \
        `: # Brings easy visualization of system resources.` \
        gnome-shell-extension-gnome-stats-pro \
        `: # A full featured MPRIS indicator button extension for GNOME Shell.` \
        gnome-shell-extension-mpris-indicator-button \
        `: # Simple extension for displaying weather conditions and forecasts.` \
        gnome-shell-extension-openweather \
        `: # Time management utility for GNOME based on the pomodoro technique.` \
        gnome-pomodoro \
        `: # Fetches a random wallpaper from an online source and sets it as desktop background.` \
        gnome-shell-extension-randomwallpaper \
        `: # Removes the dropdown arrows which were introduced in Gnome 3.10 from the App Menu.` \
        gnome-shell-extension-remove-dropdown-arrows \
        `: # Simple extension for displaying pending tasks created by TaskWarrior in GNOME Shell.` \
        gnome-shell-extension-taskwhisperer \
        `: # Translation of the text by different translators.` \
        gnome-shell-extension-text-translator \
        `: # A very simple indicator for the gnome-shell that displays the current activity tracked from timewarrior.` \
        gnome-shell-extension-timewarrior-indicator \
        `: # The GNOME Spreadsheet. Dependency of richicash.` \
        gnumeric \
        `: # A password manager for the command line written in Go.` \
        gopass \
        `: # Clipboard management system.` \
        gpaste \
        `: # Command-line tool for adding icons to filenames.` \
        izer \
        `: # A lightweight and flexible command-line JSON processor.` \
        jq \
        `: # Standards based CLI and terminal calendar program.` \
        khal \
        `: # Address book for the Unix console.` \
        khard \
        `: # A modern, hackable, featureful, OpenGL-based terminal emulator.` \
        kitty \
        `: # Little Brother database. Used by coc-lbdbq Vim plugin.` \
        lbdb \
        `: # A Helvetica/Times/Courier replacement TrueType font set, courtesy of Red Hat. For documents` \
        liberation-fonts \
        `: # New implementation of Vim.` \
        neovim \
        neovim-ruby-client \
        `: # NetworkManager OpenVPN plugin` \
        networkmanager-openvpn \
        `: # Emoji fonts.` \
        noto-emoji \
        `: # Statusline/prompt utility` \
        powerline-taskwarrior \
        `: # OpenType Unicode font with symbols for Powerline/Airline.` \
        powerline-symbols \
        `: # Python client for Neovim` \
        pynvim \
        `: # Impl of the Language Server Protocol for Python. Needed by coc-python Vim plugin.` \
        python-language-server \
        `: # A vim-inspired file manager for the console.` \
        ranger \
        `: # Provides first-class OAuth library support for Requests. Used by vdirsyncer.` \
        requests-oauthlib \
        `: # Recursively searches directories for a regex pattern.` \
        ripgrep \
        `: # Taskwarrior is a command-line todo list manager.` \
        task \
        `: # Taskwarrior <-> Google Calendar sync.` \
        taskw_gcal_sync \
        `: # A code-searching tool similar to ack, but faster.` \
        the_silver_searcher \
        `: # Magnificent app which corrects your previous console command.` \
        thefuck \
        `: # Tracks your time from the command line, and generates reports.` \
        timew \
        `: # Terminal multiplexer.` \
        tmux \
        `: # A scrypt to configure transparent encryption of sensitive files stored in a Git repository.` \
        transcrypt \
        `: # Online command-line translator. Used by VicentCordobes/vim-translate Vim plugin.` \
        translate-shell \
        `: # Lists directories recusively, and produces an indented listing of files.` \
        app-text/tree \
        `: # C/C++/C#/D/Java/Pawn code indenter and beautifier.` \
        uncrustify \
        `: # Draw images on terminals by using child windows. Usec by ranger.` \
        ueberzug \
        `: # NodeJS dependency management. Used to install iamcco/markdown-preview.nvim Vim plugin.` \
        yarn \
        `: # Terminal-based YouTube player and downloader.` \
        yewtube \
        `: # Synchronize calendars and contacts.` \
        vdirsyncer \
        `: # Visual Interactive Taskwarrior full-screen terminal interface.` \
        vit \
        `: # Wayland clipboard utilities. Needed to copy/paste with Neovim` \
        wl-clipboard \
        `: # A highly customizable and functional document viewer` \
        zathura-meta zathura-pdf-mupdf \
        `: # Z shell` \
        zsh \
        && log_info "Packages installed successful" || (log_error "Failed packages installation" ; exit -1)
elif [ -e /etc/os-release ]; then
    source /etc/os-release
    case $NAME in
        "Ubuntu")
            sudo apt -y install \
                bat \
                ccls \
                exuberant-ctags \
                fd-find \
                flake8 \
                fonts-dejavu \
                fonts-liberation2 \
                fonts-noto-color-emoji \
                fonts-powerline \
                fzf \
                gnumeric \
                gopass \
                gpaste \
                khal \
                khard \
                kitty \
                lbdb \
                neovim \
                powerline \
                python3-neovim \
                python3-powerline-taskwarrior \
                python3-requests-oauthlib \
                ranger \
                ripgrep \
                silversearcher-ag \
                taskwarrior \
                timewarrior \
                tmux \
                translate-shell \
                tree \
                uncrustify \
                vdirsyncer \
                wl-clipboard \
                vit \
                yarnpkg \
                zathura \
                zsh \
                && log_info "Packages installed successful" || (log_error "Failed packages installation" ; exit -1)
            pip3 install \
                draobpilc \
                python-language-server \
                thefuck \
                ueberzug \
                && log_info "Packages installed successful" || (log_error "Failed packages installation" ; exit -1)
            go get -u github.com/NightWolf007/izer
            ;;
    esac
fi

# Install common python packages
pip3 install \
    `: # Generates ctags-compatible output for the sections of a Markdown document. Needed by tagbar vim plugin.` \
    markdown2ctags \
    && log_info "Packages installed successful (pip)" || (log_error "Failed packages installation (pip)" ; exit -1)

# Install common nodejs packages
sudo npm install -g \
    `: # Neovim plugin for nodejs.` \
    neovim \
    && log_info "Packages installed successful (npm)" || (log_error "Failed packages installation (npm)" ; exit -1)

log_info "Installing git-foresta..."
curl -L https://github.com/takaaki-kasai/git-foresta/raw/master/git-foresta -o ~/.local/bin/git-foresta && chmod +x ~/.local/bin/git-foresta

log_info "Setting zsh as default shell..."
sudo usermod --shell /bin/zsh $USER

log_info "Setting pinentry-gnome3..."
sudo eselect pinentry set pinentry-gnome3

log_info "Creating links..."

# Neovim/Vim
## Coc settings
mkdir -p ~/.config/nvim
ln -sf ~/.vim/init.vim ~/.config/nvim/init.vim
ln -sf ~/.vim/coc-settings.json ~/.config/nvim/coc-settings.json

log_info "Installing fonts..."
# Powerline symbols
sudo eselect fontconfig enable 10-powerline-symbols.conf
# DevIcons
mkdir -p ~/.local/share/fonts/Inconsolata\ Nerd\ Font
cd ~/.local/share/fonts/Inconsolata\ Nerd\ Font
wget https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Inconsolata/complete/Inconsolata%20Regular%20Nerd%20Font%20Complete.ttf
fc-cache -f -v
cd -

log_info "Installing Gnome settings..."
dconf write "/org/gnome/desktop/wm/preferences/titlebar-font" "'DejaVu Sans Bold Semi-Condensed 9'"
dconf write "/org/gnome/desktop/wm/preferences/button-layout" "'appmenu:minimize,close'"
dconf write "/org/gnome/desktop/interface/document-font-name" "'Liberation Sans 9'"
dconf write "/org/gnome/desktop/interface/font-name" "'DejaVu Sans Semi-Condensed 9'"
dconf write "/org/gnome/desktop/interface/gtk-theme" "'Adwaita-dark'"
dconf write "/org/gnome/desktop/interface/monospace-font-name" "'DejaVu Sans Mono 9'"
dconf write "/org/gnome/shell/overrides/workspaces-only-on-primary" "true"
dconf write "/org/gnome/shell/disable-extension-version-validation" "true"
gnome-extensions enable 'appindicatorsupport@rgcjonas.gmail.com'
gnome-extensions enable 'github.notifications@alexandre.dufournet.gmail.com'
gnome-extensions enable 'gnome-stats-pro@thrallingpenguin.com'
gnome-extensions enable 'mprisindicatorbutton@JasonLG1979.github.io'
gnome-extensions enable 'openweather-extension@jenslody.de'
gnome-extensions enable 'pomodoro@arun.codito.in'
gnome-extensions enable 'randomwallpaper@iflow.space'
gnome-extensions enable 'remove-dropdown-arrows@mpdeimos.com'
gnome-extensions enable 'taskwhisperer-extension@infinicode.de'
gnome-extensions enable 'text_translator@awamper.gmail.com'
gnome-extensions enable 'timewarrior-indicator@natsakis.com'
gnome-extensions enable 'tracker-search-provider@sinnix.de'
gnome-extensions enable 'vim-key-mapping@richiware.github.com'
gnome-extensions enable 'windowsNavigator@gnome-shell-extensions.gcampax.github.com'

log_info "Configuring NeoVim..."
nvim -c 'call dein#install()' -c 'CocInstall coc-cmake coc-emoji coc-highlight coc-lbdbq coc-python coc-tag'

log_info "Enable user systemd units"
vdirsyncer discover
vdirsyncer sync
vdirsyncer metasync
systemctl --user enable --now vdirsyncer.timer
systemctl --user enable --now taskwarrior.timer

log_info "Enable screencast with pipewire"
log_info "    Manual settings"
log_info "    1. Turn it off in /etc/pulse/client.conf set 'autospawn = no' and"
log_info "    2. Disable daemon via configuration by editing /etc/pulse/daemon.conf and change 'daemonize' to 'daemonize = no'. Remove any ';' at the beginning of the line."
systemctl --user disable --now pulseaudio.socket pulseaudio.service
systemctl --user enable --now pipewire.socket pipewire-pulse.socket wireplumber.service
systemctl --user mask pulseaudio.socket pulseaudio.service

log_info "Last manual configuration..."
log_info "    - Install firefox plugins."

# TODO: add my user to groups
